# bot/handlers/auth.py
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from asgiref.sync import sync_to_async
import uuid

from bot.keyboards import get_inline_keyboard
from bot.database.methods.get import (
    get_employee_by_telegram_id,
    authorize_user_by_uuid,
    logout_user,
)

from .filters import RoleFilter


router = Router()


class AuthStates(StatesGroup):
    waiting_for_token = State()


def get_main_menu_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    return get_inline_keyboard(
        ("üì¨ –ú–æ–∏ –Ω–∞—Ä—è–¥—ã", "my_orders"),
        ("üë§ –ü—Ä–æ—Ñ–∏–ª—å", "profile"),
        ("üîë –ú–æ–π —Ç–æ–∫–µ–Ω", "my_token"),
        ("üö™ –í—ã–π—Ç–∏", "logout"),
        sizes=(2, 1, 1),
    )


def get_back_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è"""
    return get_inline_keyboard(("üîô –ù–∞–∑–∞–¥", "back_to_menu"), sizes=(1,))


def get_logout_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞"""
    return get_inline_keyboard(
        ("‚úÖ –î–∞, –≤—ã–π—Ç–∏", "confirm_logout"), ("‚ùå –û—Ç–º–µ–Ω–∞", "back_to_menu"), sizes=(1, 1)
    )


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"""
    telegram_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    employee = await get_employee_by_telegram_id(telegram_id)

    if employee:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if employee.role not in ("executor", "supervisor"):
            await message.answer(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!\n\n"
                f"–≠—Ç–æ—Ç –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç.\n"
                f"–í–∞—à–∞ —Ä–æ–ª—å: {employee.get_role_display()}\n\n"
                f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞."
            )
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {employee.full_name}!\n"
            f"üíº {employee.position}\n"
            f"‚ö° –ì—Ä—É–ø–ø–∞ –≠–ë: {employee.get_eb_group_display()}\n"
            f"üõ°Ô∏è –ì—Ä—É–ø–ø–∞ –û–ó–ü: {employee.get_ozp_group_display()}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu_keyboard(),
        )
    else:
        await message.answer(
            "üîê –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.\n\n"
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à UUID —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞:\n"
            f"(–ü–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)\n\n"
            f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º —Ä–∞–±–æ—Ç."
        )
        await state.set_state(AuthStates.waiting_for_token)


@router.message(AuthStates.waiting_for_token)
async def process_token(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ UUID —Ç–æ–∫–µ–Ω–∞"""
    token = message.text.strip()
    telegram_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç UUID
    try:
        uuid.UUID(token)  # –í–∞–ª–∏–¥–∞—Ü–∏—è UUID
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞. UUID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 12345678-1234-5678-9012-123456789abc"
        )
        return

    # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await authorize_user_by_uuid(token, telegram_id)

    if result["success"]:
        employee = result["employee"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if employee.role not in ("executor", "supervisor"):
            # –û—Ç–≤—è–∑—ã–≤–∞–µ–º telegram_id –µ—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
            employee.telegram_id = None
            await sync_to_async(employee.save)()

            await message.answer(
                f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!\n\n"
                f"–≠—Ç–æ—Ç –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç.\n"
                f"–í–∞—à–∞ —Ä–æ–ª—å: {employee.get_role_display()}\n\n"
                f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞."
            )
            await state.clear()
            return

        await message.answer(
            f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n\n"
            f"üë§ {employee.full_name}\n"
            f"üíº {employee.position}\n"
            f"‚ö° –ì—Ä—É–ø–ø–∞ –≠–ë: {employee.get_eb_group_display()}\n"
            f"üõ°Ô∏è –ì—Ä—É–ø–ø–∞ –û–ó–ü: {employee.get_ozp_group_display()}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu_keyboard(),
        )
        await state.clear()
    else:
        await message.answer(
            f"‚ùå {result['error']}\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


# Callback handlers


@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery):
    telegram_id = callback.from_user.id
    employee = await get_employee_by_telegram_id(telegram_id)

    await callback.message.edit_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {employee.full_name}!\n"
        f"üíº {employee.position}\n"
        f"‚ö° –ì—Ä—É–ø–ø–∞ –≠–ë: {employee.get_eb_group_display()}\n"
        f"üõ°Ô∏è –ì—Ä—É–ø–ø–∞ –û–ó–ü: {employee.get_ozp_group_display()}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard(),
    )
    await callback.answer()


@router.callback_query(F.data == "profile")
async def show_profile(callback: CallbackQuery):
    telegram_id = callback.from_user.id
    employee = await get_employee_by_telegram_id(telegram_id)

    await callback.message.edit_text(
        f"üë§ **–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞**\n\n"
        f"**–§–ò–û:** {employee.full_name}\n"
        f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {employee.position}\n"
        f"**–ì—Ä—É–ø–ø–∞ –≠–ë:** {employee.get_eb_group_display()}\n"
        f"**–ì—Ä—É–ø–ø–∞ –û–ó–ü:** {employee.get_ozp_group_display()}\n"
        f"**–†–æ–ª—å:** {employee.get_role_display()}\n"
        f"**UUID:** `{employee.id}`\n"
        f"**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {employee.created.strftime('%d.%m.%Y')}",
        reply_markup=get_back_keyboard(),
        parse_mode="Markdown",
    )
    await callback.answer()


@router.callback_query(F.data == "my_token")
async def show_my_token(callback: CallbackQuery):
    telegram_id = callback.from_user.id
    employee = await get_employee_by_telegram_id(telegram_id)

    await callback.message.edit_text(
        f"üîë **–í–∞—à —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:**\n\n"
        f"`{employee.id}`\n\n"
        f"*–ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –¥—Ä—É–≥–∏–º –ª–∏—Ü–∞–º!*",
        reply_markup=get_back_keyboard(),
        parse_mode="Markdown",
    )
    await callback.answer()


@router.callback_query(F.data == "logout")
async def logout_confirmation(callback: CallbackQuery):
    await callback.message.edit_text(
        "üö™ **–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã**\n\n"
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?\n"
        "–ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.",
        reply_markup=get_logout_keyboard(),
        parse_mode="Markdown",
    )
    await callback.answer()


@router.callback_query(F.data == "confirm_logout")
async def confirm_logout(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    telegram_id = callback.from_user.id

    result = await logout_user(telegram_id)

    if result:
        await callback.message.edit_text(
            "üëã –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. \n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."
        )
    else:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=get_back_keyboard(),
        )
    await callback.answer()
